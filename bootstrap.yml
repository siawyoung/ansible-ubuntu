---
- hosts: all
  vars:
  - ubuntu_release: utopic
  - deploy_user: user
  - key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  # run on Ubuntu 
  # python -c 'import crypt; print crypt.crypt("YOUR_PASSWORD", "$1$YOUR_SALT$")'
  - root_password: $1$YOUR_SALT$h4jh45jh2k34jh52
  - deploy_password: $1$YOUR_SALT$5m6hj3456jh2j45
  - install_packages: [mosh,vim,fail2ban,fish]
  - allowed_ports:
      ssh:
        port: 22
        protocol: tcp
      https:
        port: 443
        protocol: tcp
  


  tasks:
  - name: Change root password
    user:
      name=root 
      password={{ root_password }}

  - name: Add fish to the apt repository
    apt_repository:
      repo='ppa:fish-shell/release-2'

  - name: Update APT package cache
    apt:
      update_cache=yes

  - name: Upgrade APT to the latest packages
    apt:
      upgrade=safe

  - name: Install mosh, vim, fail2ban
    apt: pkg={{ item }} state=latest
    with_items: install_packages
 
  - name: Add deployment user
    user:
      name={{ deploy_user }}
      password={{ deploy_password }}
 
  - name: Add authorized deploy key
    authorized_key:
      user={{ deploy_user }}
      key="{{ key }}"
 
  - name: Remove sudo group rights
    lineinfile:
      dest=/etc/sudoers
      regexp='^%sudo'
      state=absent
 
  - name: Add deploy user to sudoers
    lineinfile:
      dest=/etc/sudoers
      regexp="{{ deploy_user }} ALL"
      line="{{ deploy_user }} ALL=(ALL) ALL"
      state=present
 
  - name: Disallow password authentication
    lineinfile:
      dest=/etc/ssh/sshd_config
      regexp="^PasswordAuthentication"
      line="PasswordAuthentication no"
      state=present
    notify:
      - Restart ssh
 
  - name: Install unattended-upgrades
    apt:
      pkg=unattended-upgrades 
      state=present
 
  - name: Make sure unattended-upgrades only installs from $ubuntu_release-security
    lineinfile:
      dest=/etc/apt/apt.conf.d/50unattended-upgrades
      regexp="{{ ubuntu_release }}-updates"
      state=absent
 
  - name: Setup ufw
    shell: ufw allow {{item.value.port}}/{{item.value.protocol}}
    with_dict: allowed_ports
 
  - name: Enable ufw
    shell: echo 'y' | ufw enable

  - name: Change shell to fish
    shell: chsh -s $(which fish) {{ deploy_user }}
 
  - name: Disallow root SSH access
    lineinfile:
      dest=/etc/ssh/sshd_config
      regexp="^PermitRootLogin"
      line="PermitRootLogin no"
      state=present
    notify:
      - Restart ssh
 
  handlers:
  - name: Restart ssh
    service: name=ssh state=restarted